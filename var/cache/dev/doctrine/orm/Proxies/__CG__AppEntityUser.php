<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'profileDescription', '' . "\0" . 'App\\Entity\\User' . "\0" . 'articles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageSize', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'publishedComments', '' . "\0" . 'App\\Entity\\User' . "\0" . 'publishedLikes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'incomingFollows', '' . "\0" . 'App\\Entity\\User' . "\0" . 'subscribedFollows', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isWriter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bookMarks'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'profileDescription', '' . "\0" . 'App\\Entity\\User' . "\0" . 'articles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageSize', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'publishedComments', '' . "\0" . 'App\\Entity\\User' . "\0" . 'publishedLikes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'incomingFollows', '' . "\0" . 'App\\Entity\\User' . "\0" . 'subscribedFollows', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isWriter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bookMarks'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAdmin(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAdmin', []);

        return parent::getIsAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAdmin(bool $isAdmin): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAdmin', [$isAdmin]);

        return parent::setIsAdmin($isAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $date): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$date]);

        return parent::setCreatedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfileDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfileDescription', []);

        return parent::getProfileDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfileDescription(string $text): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfileDescription', [$text]);

        return parent::setProfileDescription($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsWriter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsWriter', []);

        return parent::getIsWriter();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsWriter(bool $isWriter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsWriter', [$isWriter]);

        return parent::setIsWriter($isWriter);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$imageFile]);

        parent::setImageFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageName(?string $imageName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageName', [$imageName]);

        parent::setImageName($imageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageName', []);

        return parent::getImageName();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageSize(?int $imageSize): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageSize', [$imageSize]);

        parent::setImageSize($imageSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageSize(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageSize', []);

        return parent::getImageSize();
    }

    /**
     * {@inheritDoc}
     */
    public function getArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticles', []);

        return parent::getArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticle(\App\Entity\Article $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticle', [$article]);

        return parent::setArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedComments', []);

        return parent::getPublishedComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublishedComment(\App\Entity\ArticleComment $publishedComment): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublishedComment', [$publishedComment]);

        return parent::addPublishedComment($publishedComment);
    }

    /**
     * {@inheritDoc}
     */
    public function removePublishedComment(\App\Entity\ArticleComment $publishedComment): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePublishedComment', [$publishedComment]);

        return parent::removePublishedComment($publishedComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedLikes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedLikes', []);

        return parent::getPublishedLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublishedLike(\App\Entity\UserLike $publishedLike): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublishedLike', [$publishedLike]);

        return parent::addPublishedLike($publishedLike);
    }

    /**
     * {@inheritDoc}
     */
    public function removePublishedLike(\App\Entity\UserLike $ye): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePublishedLike', [$ye]);

        return parent::removePublishedLike($ye);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncomingFollows(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncomingFollows', []);

        return parent::getIncomingFollows();
    }

    /**
     * {@inheritDoc}
     */
    public function addIncomingFollow(\App\Entity\Follow $incomingFollow): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIncomingFollow', [$incomingFollow]);

        return parent::addIncomingFollow($incomingFollow);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIncomingFollow(\App\Entity\Follow $incomingFollow): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIncomingFollow', [$incomingFollow]);

        return parent::removeIncomingFollow($incomingFollow);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribedFollows(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribedFollows', []);

        return parent::getSubscribedFollows();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscribedFollow(\App\Entity\Follow $subscribedFollow): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscribedFollow', [$subscribedFollow]);

        return parent::addSubscribedFollow($subscribedFollow);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubscribedFollow(\App\Entity\Follow $subscribedFollow): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubscribedFollow', [$subscribedFollow]);

        return parent::removeSubscribedFollow($subscribedFollow);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbOfArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbOfArticles', []);

        return parent::getNbOfArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbOfIncomingFollows()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbOfIncomingFollows', []);

        return parent::getNbOfIncomingFollows();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbOfSubscribedFollows()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbOfSubscribedFollows', []);

        return parent::getNbOfSubscribedFollows();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbOfPublishedComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbOfPublishedComments', []);

        return parent::getNbOfPublishedComments();
    }

    /**
     * {@inheritDoc}
     */
    public function getnbOfPublishedLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getnbOfPublishedLikes', []);

        return parent::getnbOfPublishedLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbOfWritenArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbOfWritenArticles', []);

        return parent::getNbOfWritenArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasWritten(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasWritten', []);

        return parent::hasWritten();
    }

    /**
     * {@inheritDoc}
     */
    public function getBookMarks(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookMarks', []);

        return parent::getBookMarks();
    }

    /**
     * {@inheritDoc}
     */
    public function addBookMark(\App\Entity\BookMark $bookMark): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBookMark', [$bookMark]);

        return parent::addBookMark($bookMark);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBookMark(\App\Entity\BookMark $bookMark): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBookMark', [$bookMark]);

        return parent::removeBookMark($bookMark);
    }

}
